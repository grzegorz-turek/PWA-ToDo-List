{"version":3,"sources":["config.js","redux/listRedux.js","components/common/Checkmark/Checkmark.js","components/features/ListItem/ListItem.js","components/features/ListItem/ListItemContainer.js","components/features/ListBox/ListBox.js","components/common/Spinner/Spinner.js","components/features/List/List.js","components/features/List/ListContainer.js","components/features/NavBar/NavBar.js","components/features/NavBar/NavBarContainer.js","components/layout/MainLayout/MainLayout.js","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["BASE_URL","getList","list","data","getRequest","request","createActionName","name","LOAD_LIST","START_REQUEST","startRequest","type","END_REQUEST","endRequest","ERROR_REQUEST","errorRequest","error","initialState","pending","success","loadListThunkRequest","dispatch","a","axios","get","res","payload","message","Checkmark","className","ListItem","state","updatedItm","id","props","listitem","content","status","handleRemoveItemFromList","removeItemFromListInComponent","loadListInComponent","handleChangeItemFromList","event","setState","target","value","handleSubmitChangedItemIntoList","changeItemFromList","handleToggleItemStatusInList","this","onClick","onChange","onBlur","aria-label","React","Component","connect","removeId","delete","removeItemFromListThunkRequest","updatedItem","put","changeItemFromListThunkRequest","ListBox","map","key","Spinner","animationIn","animationOut","List","listView","length","NavBar","newItm","handleChange","handleAddItem","preventDefault","addItemToList","resetAddItem","onSubmit","placeholder","post","MainLayout","App","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.94b9d7ca.chunk.js","sourcesContent":["export const BASE_URL = 'http://localhost:8000';\r\nexport const API_URL = '/api';","import axios from 'axios';\r\nimport { API_URL, BASE_URL } from '../config';\r\n\r\n/* SELECTORS */\r\nexport const getList = ({ list }) => list.data;\r\nexport const getRequest = ({ list }) => list.request;\r\n\r\n/* ACTION NAME CREATORS */\r\nconst reducerName = 'list';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* ACTIONS */\r\nexport const LOAD_LIST = createActionName('LOAD_LIST'); // ACTION\r\nexport const loadList = payload => ({ payload, type: LOAD_LIST }); // ACTION CREATOR\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\n\r\n\r\n/* INITIAL STATE */\r\nconst initialState = {\r\n\tdata: [],\r\n\trequest: {\r\n\t\tpending: false,\r\n\t\tsuccess: null,\r\n\t\terror: null\r\n\t}\r\n};\r\n\r\n/* REDUCER */\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n\tswitch (action.type) {\r\n\t\tcase LOAD_LIST:\r\n\t\t\treturn {...statePart, data: action.payload };\r\n\t\tcase START_REQUEST:\r\n\t\t\treturn {...statePart, request: { pending: true, success: null, error: null } };\r\n\t\tcase END_REQUEST:\r\n\t\t\treturn {...statePart, request: { pending: false, success: true, error: null } };\r\n\t\tcase ERROR_REQUEST:\r\n\t\t\treturn {...statePart, request: { pending: false, success: false, error: action.error } };\r\n\t\tdefault:\r\n\t\t\treturn statePart;\r\n\t}\r\n};\r\n\r\n/* THUNK */\r\n/*\r\nexport const loadListThunkRequest = () => {\r\n\treturn dispatch => {\r\n\t\t//console.log('Request started...');\r\n\t\t//setTimeout(() => {\r\n\t\t\tconst data = [{ id: '1adfasf', content: 'kupić mydło FA' }, { id: '2evxc34', content: 'zadzwonić do mamy' }, { id: 'fvaerf4', content: 'zrobić pranie' }, { id: '5wrtgbs', content: 'opłacić prąd' }, { id: 'hbdfgaa', content: 'opłacić szambo' }, { id: 'iutmyu6', content: 'opłacić gaz' }, { id: '43wrgrt', content: 'iść do kościoła' }, { id: 'xbrtgw4', content: 'potrenowć bieganie' }, { id: '65f3ehw', content: 'upiec sernik' }, { id: 'u7645eh', content: 'ubić wołu' }, { id: 'kjmfug4', content: 'wyprawić skórę woła' }, { id: '74jrtik', content: 'rozpaliś ognisko' }, { id: 'h35ehru', content: 'zasadzić drzewo' }, { id: '65htujk', content: 'napić się wody źródlanej' }, { id: '8756r7j', content: 'napisać list do Świętego Mikołaja (to co, że już po Świętach)' }, { id: '56rjyik', content: 'upolować łosia' }, { id: 'q2wergz', content: 'zrobić pasztet z dziczyzny' }, { id: 'mnb530p', content: 'oglądnoć Grę o Tron' }, { id: 'vwqf4tf', content: 'poskakać na nartach' }, { id: '654ktjf', content: 'powalczyć Judo' }, { id: 'jrbv432', content: 'zgłosić się do Fame MMA (jako kasjer)' }, { id: '235122f', content: 'wypić piwo' }, { id: 'be5tsht', content: 'zjeść ciastko' }, { id: 't5ndhnn', content: 'beknąć złowrogo' }, { id: '76543v0', content: 'przegonić na dobre kota sąsiadów' }, { id: 'mbyegt5', content: 'ztuningować auto' }, { id: '4r5tgh7', content: 'odśnieżyć podwórko' }, { id: '5yhli0i', content: 'pojeździć na sankach' }, { id: '786d96k', content: 'zobaczyć Ermitaż' }, { id: 'h56heyt', content: 'zaspiewąc pieśń patriotyczną' }, { id: '10101gf', content: 'zakupić bukiet kwiatów' }];\r\n\t\t\tdispatch(loadList(data));\r\n\t\t\t//console.log('Request finished after 2sec!');\r\n\t\t//}, 2000);\r\n\t};\r\n};\r\n*/\r\n\r\n/*\r\nexport const loadListThunkRequest = () => {\r\n\treturn dispatch => {\r\n\t\taxios.get(`${API_URL}/list`)\r\n\t\t\t.then(res => dispatch(loadList(res.data)))\r\n\t\t\t.catch(err => console.log(err.message))\r\n\t};\r\n};\r\n*/\r\n\r\nexport const loadListThunkRequest = () => {\r\n\treturn async dispatch => {\r\n\t\tdispatch(startRequest());\r\n\t\ttry {\r\n\t\t\tlet res = await axios.get(`${BASE_URL}${API_URL}/list`);\r\n\t\t\t//await new Promise((resolve, reject) => setTimeout(resolve, 2000));// TEST------------------------\r\n\t\t\tdispatch(loadList(res.data));\r\n\t\t\tdispatch(endRequest());\r\n\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tdispatch(errorRequest(err.message));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const addItemToListThunkRequest = (newItm) => {\r\n\treturn async dispatch => {\r\n  \r\n\t\tdispatch(startRequest());\r\n\t\ttry {\r\n\t\t\tlet res = await axios.post(`${BASE_URL}${API_URL}/list`, { data: { content: newItm.content, status: newItm.status} } );\r\n\t\t\t//await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n\t\t\tdispatch(endRequest());\r\n  \r\n\t\t} catch(e) {\r\n\t\t\tdispatch(errorRequest(e.message));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const removeItemFromListThunkRequest = (removeId) => {\r\n\treturn async dispatch => {\r\n  \r\n\t\tdispatch(startRequest());\r\n\t\ttry {\r\n\t\t\tlet res = await axios.delete(`${BASE_URL}${API_URL}/list`, { data : { removeId: removeId } } );\r\n\t\t\t//await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n\t\t\tdispatch(endRequest());\r\n  \r\n\t\t} catch(e) {\r\n\t\t\tdispatch(errorRequest(e.message));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const changeItemFromListThunkRequest = (updatedItem) => {\r\n\treturn async dispatch => {\r\n\r\n\t\tdispatch(startRequest());\r\n\t\ttry {\r\n\t\t\tlet res = await axios.put(`${BASE_URL}${API_URL}/list`, { data: { updatedItem: updatedItem } } );\r\n\t\t\t//await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n\t\t\tdispatch(endRequest());\r\n\t\t} catch(e) {\r\n\t\t\tdispatch(errorRequest(e.message));\r\n\t\t}\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport { MdCheck } from 'react-icons/md';\r\nimport './Checkmark.scss';\r\n\r\nconst Checkmark = () => (\r\n    <div className='checkmark'>\r\n        <MdCheck />\r\n    </div>\r\n);\r\n\r\nexport default Checkmark;","import React from 'react';\r\nimport './ListItem.scss';\r\nimport { MdClose, MdCheck } from 'react-icons/md';\r\nimport Checkmark from '../../common/Checkmark/Checkmark';\r\n\r\n\r\nclass ListItem extends React.Component {\r\n\r\n    state = {\r\n        updatedItm: {\r\n            id: this.props.listitem.id,\r\n            content: this.props.listitem.content,\r\n            status: this.props.listitem.status\r\n        }\r\n    }\r\n\r\n    handleRemoveItemFromList = async () => {\r\n        await this.props.removeItemFromListInComponent(this.props.listitem.id);\r\n        this.props.loadListInComponent();\r\n    }\r\n\r\n    handleChangeItemFromList = async (event) => {\r\n        await this.setState( { updatedItm: { ...this.state.updatedItm, content: event.target.value } } )\r\n    }\r\n\r\n    handleSubmitChangedItemIntoList = async () => {\r\n        await this.props.changeItemFromList(this.state.updatedItm);\r\n        this.props.loadListInComponent();\r\n    }\r\n\r\n    handleToggleItemStatusInList = async () => {\r\n        await this.setState( { updatedItm: { ...this.state.updatedItm, status: this.state.updatedItm.status === 'doing' ? 'done' : 'doing' } } )\r\n        await this.props.changeItemFromList(this.state.updatedItm);\r\n        this.props.loadListInComponent();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className='list-item'>\r\n                <div className='list-item__checkbox'>\r\n                    <div className='list-item__checkbox__blank'></div>\r\n                </div>\r\n                {this.state.updatedItm.status === 'done' ? <Checkmark /> : null}\r\n                <div className='list-item__checkbox__cover' onClick={this.handleToggleItemStatusInList}></div>\r\n                <input\r\n                    type='text'\r\n                    className={`${this.props.listitem.status} list-item__input`}\r\n                    value={this.state.updatedItm.content || this.props.listitem.content}\r\n                    onChange={this.handleChangeItemFromList}\r\n                    onBlur={this.state.updatedItm.content !== this.props.listitem.content ? this.handleSubmitChangedItemIntoList : null}\r\n                />\r\n                <button className='list-item__button' aria-label='Approve' onClick={this.state.updatedItm.content !== this.props.listitem.content ? this.handleSubmitChangedItemIntoList : null}><MdCheck /></button>\r\n                <button className='list-item__button' aria-label='Remove' onClick={this.handleRemoveItemFromList}><MdClose /></button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;","import { connect } from 'react-redux';\r\nimport { getList, removeItemFromListThunkRequest, loadListThunkRequest, changeItemFromListThunkRequest } from '../../../redux/listRedux';\r\nimport ListItem from './ListItem';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    list: getList(state),\r\n    //request: getRequest(state)\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeItemFromListInComponent: (removeId) => dispatch(removeItemFromListThunkRequest(removeId)),\r\n    loadListInComponent: () => dispatch(loadListThunkRequest()),\r\n    changeItemFromList: (updatedItem) => dispatch(changeItemFromListThunkRequest(updatedItem))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);","import React from 'react';\r\nimport ListItem from '../ListItem/ListItemContainer';\r\nimport './ListBox.scss';\r\n\r\nconst ListBox = (props) => (\r\n    <div className='list-box'>\r\n        {props.list.map(listitem => <ListItem key={listitem.id} listitem={listitem} />)}\r\n    </div>\r\n);\r\n\r\nexport default ListBox;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport ListBox from '../ListBox/ListBox';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport './List.scss';\r\n\r\nclass List extends React.Component {\r\n    /*\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            list: []\r\n        }\r\n    }\r\n    */\r\n    /*\r\n    componentDidMount() {\r\n        fetch('http://localhost:8000/api/list')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                this.setState({ list: res});\r\n                console.log('res: ', res);// DEL --------------------------------------------------\r\n            })\r\n            .catch(err => {\r\n                console.log('We\\'ve got fetch error men')\r\n            })\r\n    }\r\n    */\r\n\r\n    componentDidMount() {\r\n        this.props.loadListInComponent()\r\n    }\r\n\r\n    render() {\r\n        let listView;\r\n\r\n        if (this.props.request.pending || this.props.request.success === null) {\r\n            listView = <Spinner />\r\n        }\r\n\r\n        if ( (!this.props.request.pending || this.props.request.success ) && this.props.list.length > 0) {\r\n            listView = <ListBox list={this.props.list} />\r\n        }\r\n\r\n        if ( (!this.props.request.pending || this.props.request.success ) && this.props.list.length === 0) {\r\n            listView = 'No items in the list'\r\n        }\r\n\r\n        if(!this.props.request.pending && this.props.request.error) {\r\n            listView = this.props.request.error\r\n        }\r\n\r\n        return (\r\n            <div className='list'>\r\n                {listView}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default List;","import { connect } from 'react-redux';\r\nimport { getList, loadListThunkRequest, getRequest } from '../../../redux/listRedux';\r\nimport List from './List';\r\n\r\nconst mapStateToProps = state => ({\r\n    list: getList(state),\r\n    request: getRequest(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadListInComponent: () => dispatch(loadListThunkRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React from 'react';\r\nimport './NavBar.scss';\r\nimport { MdCheck } from 'react-icons/md';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    state = {\r\n        newItm: {\r\n            content: '',\r\n            status: 'doing'\r\n        }\r\n    }\r\n\r\n    handleChange = (event) =>  {\r\n        this.setState({ newItm: { ...this.state.newItm, [event.target.name]: event.target.value }});\r\n    }\r\n\r\n    handleAddItem = async (event) => {\r\n        event.preventDefault();\r\n        await this.props.addItemToList(this.state.newItm);\r\n        this.props.loadListInComponent();\r\n        this.resetAddItem();\r\n    }\r\n\r\n    resetAddItem = () => {\r\n        this.setState({\r\n            newItm: {\r\n                content: '',\r\n                status: 'doing'\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className='navbar' onSubmit={this.state.newItm.content ? this.handleAddItem : null}>\r\n                <input type='text' placeholder='add task here ...' className='navbar__input' name='content' value={this.state.newItm.content} onChange={this.handleChange} />\r\n                <button className='navbar__button' aria-label='Approve'><MdCheck /></button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import { connect } from 'react-redux';\r\nimport { addItemToListThunkRequest, loadListThunkRequest, getRequest, getList } from '../../../redux/listRedux';\r\nimport List from './NavBar';\r\n\r\nconst mapStateToProps = state => ({\r\n    list: getList(state),\r\n    request: getRequest(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItemToList: (data) => dispatch(addItemToListThunkRequest(data)),\r\n    loadListInComponent: () => dispatch(loadListThunkRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);","import React from 'react';\r\nimport List from '../../features/List/ListContainer';\r\nimport NavBar from '../../features/NavBar/NavBarContainer';\r\nimport './MainLayout.scss';\r\n\r\nconst MainLayout = () => (\r\n    <div className='main-layout'>\r\n        <NavBar />\r\n        <List />\r\n    </div>\r\n);\r\n\r\nexport default MainLayout;","import React from 'react';\r\nimport './App.css';\r\nimport MainLayout from './components/layout/MainLayout/MainLayout';\r\n\r\nconst App = () => (\r\n    <div>\r\n        <MainLayout />\r\n    </div>\r\n);\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport list from './listRedux';// import reducers\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    list\r\n});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\n\nconst Root = () => (\n    <Provider store={store} >\n        <App />\n    </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}